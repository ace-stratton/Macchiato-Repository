package endurosat.macif

<** @description: MEDDEA Communication Interface
    @details: id = 106 
**>

interface Meddea
{
    version { major 0 minor 1 }


    <**@description: Shows status of sent command**>
    enumeration eCommandExecutionReturn
    {
        SUCCESS, 
        FAIL
    }

    <**@description: Possible MEDDEA Modes**>
    enumeration eMEDDEAModes
    {
        MEDDEA_IDLE_MODE,
        MEDDEA_Engineering_Mode,
        MEDDEA_Nominal_Science_Mode,
        MEDDEA_Reduced_Readout_Science_Mode,
        MEDDEA_Depolarization_Mode,
        MEDDEA_Ramp_Mode,
        MEDDEA_Pulser_Calibration_Mode,
        MEDDEA_Safe_Mode,
        MEDDEA_Off_Mode
    }

    <**@description: Command Parameters**>
    struct sMEDDEAParameters
    {
        UInt32 parameter1
        UInt32 parameter2
        UInt32 parameter3
    }

    <**@description: Date **>
    struct sdate
    {
        <**@description: This value can be in the range: 2000 <= year <= 2099 **>
        UInt16 year
        
        <**@description: This value can be in the range: 1 <= month <= 12 **>
        UInt8 mon
        
        <**@description: This value can be in the range: 1 <= month day <= 31 **>
        UInt8 day

    }

    <**@description: Time **>
    struct stime
    {
        <**@description: This value can be in the range: 0 <= hour <= 23 **>
        UInt8  hour
        
        <**@description: This value can be in the range: 0 <= minutes <= 59 **>
        UInt8  min
        
        <**@description: This value can be in the range: 0 <= seconds <= 59 **>
        UInt8  sec
        
        <**@description: This value can be in the range: 0 <= milliseconds <= 999 **>
        UInt16 ms
        
        <**@description: This value can be in the range: 0 <= microseconds <= 999 **>
        UInt16 us
    }





    <** @description: Gets current mode of MEDDEA 
      @details: id = 0x000001
    **>
    method getMEDDEAMode
    {

    	out
    	{
			
            <**@description: current parameters**>
            sMEDDEAParameters parameters

            <**@description: current mode**>
            eMEDDEAModes mode

    	}
    }

    <** @description: Sets current mode of MEDDEA 
      @details: id = 0x000002
    **>
    method setMEDDEAMode
    {
        in
        {
            <**@description: parameters, if any, for mode. otherwise leave blank**>
            sMEDDEAParameters parameters

            <**@description: mode to set MEDDEA to**>
            eMEDDEAModes mode
        }
    	
        out
    	{
			
            <**@description: operation success**>
            eCommandExecutionReturn opResult
            
            <**@description: current parameters**>
            sMEDDEAParameters parameters

            <**@description: current mode**>
            eMEDDEAModes mode

    	}
    }

    <** @description: Sets MEDDEA time using GNSS or Manual 
      @details: id = 0x000003
    **>
    method setMEDDEATime
    {

        in
    	{
    		<**@description: Set using GNSS or Manual? (ON = GNSS)**>
            Boolean GNSS

            <**@description: Manual time entry**>
            stime time
            
    	}
    	out
    	{
			
            <**@description: Status of sent command **>
            eCommandExecutionReturn executionSuccess

    	}
    }

    <** @description: Sets MEDDEA date using GNSS or manual
      @details: id = 0x000004
    **>
    method setMEDDEADate
    {

        in
    	{
    		<**@description: Set using GNSS or Manual? (ON = GNSS)**>
            Boolean GNSS

            <**@description: Manual time entry**>
            sdate date
            
    	}
    	out
    	{
			
            <**@description: Status of sent command **>
            eCommandExecutionReturn executionSuccess

    	}
    }

    <** @description: Gets current date and time of MEDDEA 
      @details: id = 0x000005
    **>
    method getMEDDEATimeDate
    {

    	out
    	{
			
            <**@description: current time**>
            stime time

            <**@description: current date**>
            sdate date

    	}
    }

    
}